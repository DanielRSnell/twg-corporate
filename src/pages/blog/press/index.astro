---
import BlogCard from "@/components/BlogCard.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import ContentNav from "@/components/blog/ContentNav.astro";
import { getEntry } from "astro:content";

const BLOG_FOLDER = "blog";
const postIndex = await getEntry(BLOG_FOLDER, "-index");
const { title, description } = postIndex.data;
const posts = await getSinglePage(BLOG_FOLDER);
const call_to_action = await getEntry("sections", "call-to-action");

// Filter only press posts
const pressPosts = posts.filter(post => post.data.type === "press");
---

<Base 
  title="Press Releases" 
  meta_title="Company News & Press Releases | ThisWay Global"
  description="Latest news, announcements, and press releases from ThisWay Global about AI technology and enterprise innovation."
>
  <section class="section bg-theme-light">
    <div class="container">
      <div class="max-w-2xl mx-auto text-center">
        <h1
          class="pb-4"
          data-aos="fade-up-sm"
          data-aos-delay="100"
        >
          Press Releases & News
        </h1>
        <p
          class="pb-8"
          data-aos="fade-up-sm"
          data-aos-delay="200"
        >
          Latest announcements and news from ThisWay Global
        </p>
      </div>
    </div>
  </section>

  <section class="section">
    <div class="container">
      <ContentNav currentPath={Astro.url.pathname} />
      
      <div class="row g-4">
        {
          pressPosts.map((post, i) => (
            <div
              data-aos="fade-up-sm"
              data-aos-delay={(i + 1) * 100}
              class="relative sm:col-6 lg:col-4 group"
            >
              <BlogCard post={post} />
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <CallToAction call_to_action={call_to_action} />
</Base>
